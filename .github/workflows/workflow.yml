name: Workflow
on:
  push:
    branches: [ main ]
  pull_request: { }

env:
  IMAGE_NAME: ghcr.io/preparingforexams/telegram-vreddit-bot

jobs:
  lint:
    runs-on: ubuntu-latest
    container: python:3.11-slim
    steps:
      - name: Install Poetry
        run: pip install poetry==1.6.1
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
      - run: poetry install
      - name: Check coding standards
        run: |
          poetry run black --check src/
          poetry run isort --check-only src/
          poetry run mypy src/

  test:
    runs-on: ubuntu-latest
    container: python:3.11-slim
    steps:
      - name: Install Poetry
        run: pip install poetry==1.6.1
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
      - run: poetry install
      - name: Run tests
        run: poetry run pytest src/

  build-container-image:
    runs-on: ubuntu-latest
    if: success() && github.event_name == 'pull_request'
    needs:
      - lint
      - test
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Build container image
        uses: docker/build-push-action@v4
        with:
          push: false
          tags: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ github.sha }}"

  push-container-digests:
    runs-on: ubuntu-latest
    if: success() && github.ref_name == github.event.repository.default_branch
    needs:
      - lint
      - test
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.sha }},enable={{is_default_branch}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: ${{ matrix.platform }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Build and push
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge-container-image:
    runs-on: ubuntu-latest
    if: success() && github.ref_name == github.event.repository.default_branch
    needs:
      - push-container-digests
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.sha }},enable={{is_default_branch}}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.IMAGE_NAME }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}

  deploy:
    runs-on: ubuntu-latest
    needs: merge-container-image
    concurrency: production
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
      - name: Substitute environment variables in values.yaml
        run: "envsubst < values.yaml > values_sub.yaml && mv values_sub.yaml values.yaml"
        env:
          FEATURES: >
            [
            handle_updates,
            download,
            youtube_url_convert,
            telegram_audio_convert,
            twitter_download,
            youtube_download
            ]
          GSA_JSON: ${{ secrets.GSA_JSON }}
          INSTA_PASSWORD: ${{secrets.INSTA_PASSWORD }}
          INSTA_USER: ${{secrets.INSTA_USER }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      - uses: WyriHaximus/github-action-helm3@v3
        with:
          exec: helm upgrade cancerbot . --install --namespace=cancerbot --atomic
          kubeconfig: '${{ secrets.KUBECONFIG_RAW }}'

  deploy-home:
    needs: merge-container-image
    concurrency: production-home
    container: ghcr.io/bjoernpetersen/helm:latest
    runs-on: born
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
      - name: Substitute environment variables in values.yaml
        run: "envsubst < values.yaml > values_sub.yaml && mv values_sub.yaml values.yaml"
        env:
          FEATURES: >
            [
            tiktok_download
            ]
          GSA_JSON: ${{ secrets.GSA_JSON }}
          INSTA_PASSWORD: ${{secrets.INSTA_PASSWORD }}
          INSTA_USER: ${{secrets.INSTA_USER }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      - uses: WyriHaximus/github-action-helm3@v3
        with:
          exec: helm upgrade cancerbot . --install --namespace=cancerbot --atomic
          kubeconfig: '${{ secrets.BORN_KUBECONFIG_RAW }}'

  clean:
    runs-on: ubuntu-latest
    concurrency: cleanup
    continue-on-error: true
    needs: [ deploy, deploy-home ]
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Clean up old app container images
        uses: actions/delete-package-versions@v4
        with:
          package-name: ${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}
          package-type: container
          min-versions-to-keep: 10
